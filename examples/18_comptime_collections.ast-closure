ast::File {
  items:
    declare fn printf(fmt: string, *args: any) -> () : fn(string, any) -> () : fn(string, any) -> ()
    priv import std::collections::HashMap : ()
    priv const PRIME_COUNT: i64 : i64
      value 6 : i64
    priv const ZERO_BUFFER_CAPACITY: i64 : i64
      value 16 : i64
    priv const HTTP_STATUS_COUNT: i64 : i64
      value 4 : i64
    priv fn main() -> () : fn() -> () : fn() -> ()
      block (6 stmts) : ()
        expr_stmt ;
          invoke : ()
            target: printf
            args:
              value "=== Compile-time Collections ===
" : &string
        expr_stmt ;
          invoke : ()
            target: printf
            args:
              value "Vec literals:
" : &string
        expr_stmt ;
          invoke : ()
            target: printf
            args:
              value "  primes: %d elements
" : &string
              locator PRIME_COUNT : i64
        expr_stmt ;
          invoke : ()
            target: printf
            args:
              value "  zero buffer: %d elements
" : &string
              locator ZERO_BUFFER_CAPACITY : i64
        expr_stmt ;
          invoke : ()
            target: printf
            args:
              value "
HashMap literal via HashMap::from:
" : &string
        expr_stmt ;
          invoke : ()
            target: printf
            args:
              value "  tracked HTTP statuses: %d entries
" : &string
              locator HTTP_STATUS_COUNT : i64
}
