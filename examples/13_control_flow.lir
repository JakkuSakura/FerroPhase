LirProgram {
    functions: [
        LirFunction {
            name: "func_0",
            signature: LirFunctionSignature {
                params: [],
                return_type: Void,
                is_variadic: false,
            },
            basic_blocks: [
                LirBasicBlock {
                    id: 0,
                    label: Some(
                        "bb0",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 0,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "=== While Loop ===",
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        1,
                    ),
                    predecessors: [],
                    successors: [
                        1,
                    ],
                },
                LirBasicBlock {
                    id: 1,
                    label: Some(
                        "bb1",
                    ),
                    instructions: [],
                    terminator: Br(
                        2,
                    ),
                    predecessors: [
                        0,
                    ],
                    successors: [
                        2,
                    ],
                },
                LirBasicBlock {
                    id: 2,
                    label: Some(
                        "bb2",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 1,
                            kind: Lt(
                                Constant(
                                    Int(
                                        0,
                                        I64,
                                    ),
                                ),
                                Constant(
                                    Int(
                                        5,
                                        I32,
                                    ),
                                ),
                            ),
                            type_hint: Some(
                                I32,
                            ),
                            debug_info: None,
                        },
                    ],
                    terminator: CondBr {
                        condition: Register(
                            1,
                        ),
                        if_true: 4,
                        if_false: 5,
                    },
                    predecessors: [
                        1,
                        6,
                    ],
                    successors: [
                        4,
                        5,
                    ],
                },
                LirBasicBlock {
                    id: 4,
                    label: Some(
                        "bb4",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 2,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "Counter: {}",
                                        ),
                                    ),
                                    Constant(
                                        Int(
                                            0,
                                            I64,
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        7,
                    ),
                    predecessors: [
                        2,
                    ],
                    successors: [
                        7,
                    ],
                },
                LirBasicBlock {
                    id: 5,
                    label: Some(
                        "bb5",
                    ),
                    instructions: [],
                    terminator: Br(
                        3,
                    ),
                    predecessors: [
                        2,
                    ],
                    successors: [
                        3,
                    ],
                },
                LirBasicBlock {
                    id: 7,
                    label: Some(
                        "bb7",
                    ),
                    instructions: [],
                    terminator: Br(
                        6,
                    ),
                    predecessors: [
                        4,
                    ],
                    successors: [
                        6,
                    ],
                },
                LirBasicBlock {
                    id: 3,
                    label: Some(
                        "bb3",
                    ),
                    instructions: [],
                    terminator: Br(
                        6,
                    ),
                    predecessors: [
                        5,
                    ],
                    successors: [
                        6,
                    ],
                },
                LirBasicBlock {
                    id: 6,
                    label: Some(
                        "bb6",
                    ),
                    instructions: [],
                    terminator: Br(
                        2,
                    ),
                    predecessors: [
                        7,
                        3,
                    ],
                    successors: [
                        2,
                    ],
                },
                LirBasicBlock {
                    id: 8,
                    label: Some(
                        "bb8",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 3,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "Final counter: {}",
                                        ),
                                    ),
                                    Constant(
                                        Int(
                                            0,
                                            I64,
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        9,
                    ),
                    predecessors: [],
                    successors: [
                        9,
                    ],
                },
                LirBasicBlock {
                    id: 9,
                    label: Some(
                        "bb9",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 4,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "\n=== Infinite Loop with Break ===",
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        10,
                    ),
                    predecessors: [
                        8,
                    ],
                    successors: [
                        10,
                    ],
                },
                LirBasicBlock {
                    id: 10,
                    label: Some(
                        "bb10",
                    ),
                    instructions: [],
                    terminator: Br(
                        11,
                    ),
                    predecessors: [
                        9,
                    ],
                    successors: [
                        11,
                    ],
                },
                LirBasicBlock {
                    id: 11,
                    label: Some(
                        "bb11",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 5,
                            kind: Ge(
                                Constant(
                                    Int(
                                        0,
                                        I64,
                                    ),
                                ),
                                Constant(
                                    Int(
                                        3,
                                        I64,
                                    ),
                                ),
                            ),
                            type_hint: Some(
                                I32,
                            ),
                            debug_info: None,
                        },
                    ],
                    terminator: CondBr {
                        condition: Register(
                            5,
                        ),
                        if_true: 13,
                        if_false: 14,
                    },
                    predecessors: [
                        10,
                        16,
                    ],
                    successors: [
                        13,
                        14,
                    ],
                },
                LirBasicBlock {
                    id: 12,
                    label: Some(
                        "bb12",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 6,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "\n=== Loop with Continue ===",
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        17,
                    ),
                    predecessors: [],
                    successors: [
                        17,
                    ],
                },
                LirBasicBlock {
                    id: 13,
                    label: Some(
                        "bb13",
                    ),
                    instructions: [],
                    terminator: Br(
                        15,
                    ),
                    predecessors: [
                        11,
                    ],
                    successors: [
                        15,
                    ],
                },
                LirBasicBlock {
                    id: 14,
                    label: Some(
                        "bb14",
                    ),
                    instructions: [],
                    terminator: Br(
                        15,
                    ),
                    predecessors: [
                        11,
                    ],
                    successors: [
                        15,
                    ],
                },
                LirBasicBlock {
                    id: 15,
                    label: Some(
                        "bb15",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 7,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "Loop iteration: {}",
                                        ),
                                    ),
                                    Constant(
                                        Int(
                                            0,
                                            I64,
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        16,
                    ),
                    predecessors: [
                        13,
                        14,
                    ],
                    successors: [
                        16,
                    ],
                },
                LirBasicBlock {
                    id: 16,
                    label: Some(
                        "bb16",
                    ),
                    instructions: [],
                    terminator: Br(
                        11,
                    ),
                    predecessors: [
                        15,
                    ],
                    successors: [
                        11,
                    ],
                },
                LirBasicBlock {
                    id: 17,
                    label: Some(
                        "bb17",
                    ),
                    instructions: [],
                    terminator: Br(
                        18,
                    ),
                    predecessors: [
                        12,
                    ],
                    successors: [
                        18,
                    ],
                },
                LirBasicBlock {
                    id: 18,
                    label: Some(
                        "bb18",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 8,
                            kind: Lt(
                                Constant(
                                    Int(
                                        0,
                                        I64,
                                    ),
                                ),
                                Constant(
                                    Int(
                                        6,
                                        I64,
                                    ),
                                ),
                            ),
                            type_hint: Some(
                                I32,
                            ),
                            debug_info: None,
                        },
                    ],
                    terminator: CondBr {
                        condition: Register(
                            8,
                        ),
                        if_true: 20,
                        if_false: 21,
                    },
                    predecessors: [
                        17,
                        22,
                    ],
                    successors: [
                        20,
                        21,
                    ],
                },
                LirBasicBlock {
                    id: 19,
                    label: Some(
                        "bb19",
                    ),
                    instructions: [],
                    terminator: Br(
                        22,
                    ),
                    predecessors: [
                        21,
                    ],
                    successors: [
                        22,
                    ],
                },
                LirBasicBlock {
                    id: 20,
                    label: Some(
                        "bb20",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 9,
                            kind: Eq(
                                Constant(
                                    Int(
                                        0,
                                        I64,
                                    ),
                                ),
                                Constant(
                                    Int(
                                        2,
                                        I64,
                                    ),
                                ),
                            ),
                            type_hint: Some(
                                I32,
                            ),
                            debug_info: None,
                        },
                        LirInstruction {
                            id: 10,
                            kind: Eq(
                                Constant(
                                    Int(
                                        0,
                                        I64,
                                    ),
                                ),
                                Constant(
                                    Int(
                                        4,
                                        I64,
                                    ),
                                ),
                            ),
                            type_hint: Some(
                                I32,
                            ),
                            debug_info: None,
                        },
                        LirInstruction {
                            id: 11,
                            kind: Add(
                                Register(
                                    9,
                                ),
                                Register(
                                    10,
                                ),
                            ),
                            type_hint: Some(
                                I32,
                            ),
                            debug_info: None,
                        },
                    ],
                    terminator: CondBr {
                        condition: Register(
                            11,
                        ),
                        if_true: 23,
                        if_false: 24,
                    },
                    predecessors: [
                        18,
                    ],
                    successors: [
                        23,
                        24,
                    ],
                },
                LirBasicBlock {
                    id: 21,
                    label: Some(
                        "bb21",
                    ),
                    instructions: [],
                    terminator: Br(
                        19,
                    ),
                    predecessors: [
                        18,
                    ],
                    successors: [
                        19,
                    ],
                },
                LirBasicBlock {
                    id: 22,
                    label: Some(
                        "bb22",
                    ),
                    instructions: [],
                    terminator: Br(
                        18,
                    ),
                    predecessors: [
                        19,
                        26,
                    ],
                    successors: [
                        18,
                    ],
                },
                LirBasicBlock {
                    id: 23,
                    label: Some(
                        "bb23",
                    ),
                    instructions: [],
                    terminator: Br(
                        25,
                    ),
                    predecessors: [
                        20,
                    ],
                    successors: [
                        25,
                    ],
                },
                LirBasicBlock {
                    id: 24,
                    label: Some(
                        "bb24",
                    ),
                    instructions: [],
                    terminator: Br(
                        25,
                    ),
                    predecessors: [
                        20,
                    ],
                    successors: [
                        25,
                    ],
                },
                LirBasicBlock {
                    id: 25,
                    label: Some(
                        "bb25",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 12,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "Not 2 or 4: {}",
                                        ),
                                    ),
                                    Constant(
                                        Int(
                                            0,
                                            I64,
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        26,
                    ),
                    predecessors: [
                        23,
                        24,
                    ],
                    successors: [
                        26,
                    ],
                },
                LirBasicBlock {
                    id: 26,
                    label: Some(
                        "bb26",
                    ),
                    instructions: [],
                    terminator: Br(
                        22,
                    ),
                    predecessors: [
                        25,
                    ],
                    successors: [
                        22,
                    ],
                },
                LirBasicBlock {
                    id: 27,
                    label: Some(
                        "bb27",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 13,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "\n=== Nested Loops ===",
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        28,
                    ),
                    predecessors: [],
                    successors: [
                        28,
                    ],
                },
                LirBasicBlock {
                    id: 28,
                    label: Some(
                        "bb28",
                    ),
                    instructions: [],
                    terminator: Br(
                        29,
                    ),
                    predecessors: [
                        27,
                    ],
                    successors: [
                        29,
                    ],
                },
                LirBasicBlock {
                    id: 29,
                    label: Some(
                        "bb29",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 14,
                            kind: Lt(
                                Constant(
                                    Int(
                                        0,
                                        I64,
                                    ),
                                ),
                                Constant(
                                    Int(
                                        3,
                                        I64,
                                    ),
                                ),
                            ),
                            type_hint: Some(
                                I32,
                            ),
                            debug_info: None,
                        },
                    ],
                    terminator: CondBr {
                        condition: Register(
                            14,
                        ),
                        if_true: 31,
                        if_false: 32,
                    },
                    predecessors: [
                        28,
                        33,
                    ],
                    successors: [
                        31,
                        32,
                    ],
                },
                LirBasicBlock {
                    id: 30,
                    label: Some(
                        "bb30",
                    ),
                    instructions: [],
                    terminator: Br(
                        33,
                    ),
                    predecessors: [
                        32,
                    ],
                    successors: [
                        33,
                    ],
                },
                LirBasicBlock {
                    id: 31,
                    label: Some(
                        "bb31",
                    ),
                    instructions: [],
                    terminator: Br(
                        34,
                    ),
                    predecessors: [
                        29,
                    ],
                    successors: [
                        34,
                    ],
                },
                LirBasicBlock {
                    id: 32,
                    label: Some(
                        "bb32",
                    ),
                    instructions: [],
                    terminator: Br(
                        30,
                    ),
                    predecessors: [
                        29,
                    ],
                    successors: [
                        30,
                    ],
                },
                LirBasicBlock {
                    id: 33,
                    label: Some(
                        "bb33",
                    ),
                    instructions: [],
                    terminator: Br(
                        29,
                    ),
                    predecessors: [
                        30,
                        40,
                    ],
                    successors: [
                        29,
                    ],
                },
                LirBasicBlock {
                    id: 34,
                    label: Some(
                        "bb34",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 15,
                            kind: Lt(
                                Constant(
                                    Int(
                                        0,
                                        I64,
                                    ),
                                ),
                                Constant(
                                    Int(
                                        2,
                                        I64,
                                    ),
                                ),
                            ),
                            type_hint: Some(
                                I32,
                            ),
                            debug_info: None,
                        },
                    ],
                    terminator: CondBr {
                        condition: Register(
                            15,
                        ),
                        if_true: 36,
                        if_false: 37,
                    },
                    predecessors: [
                        31,
                        38,
                    ],
                    successors: [
                        36,
                        37,
                    ],
                },
                LirBasicBlock {
                    id: 35,
                    label: Some(
                        "bb35",
                    ),
                    instructions: [],
                    terminator: Br(
                        38,
                    ),
                    predecessors: [
                        37,
                    ],
                    successors: [
                        38,
                    ],
                },
                LirBasicBlock {
                    id: 36,
                    label: Some(
                        "bb36",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 16,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "x={}, y={}",
                                        ),
                                    ),
                                    Constant(
                                        Int(
                                            0,
                                            I64,
                                        ),
                                    ),
                                    Constant(
                                        Int(
                                            0,
                                            I64,
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        39,
                    ),
                    predecessors: [
                        34,
                    ],
                    successors: [
                        39,
                    ],
                },
                LirBasicBlock {
                    id: 37,
                    label: Some(
                        "bb37",
                    ),
                    instructions: [],
                    terminator: Br(
                        35,
                    ),
                    predecessors: [
                        34,
                    ],
                    successors: [
                        35,
                    ],
                },
                LirBasicBlock {
                    id: 38,
                    label: Some(
                        "bb38",
                    ),
                    instructions: [],
                    terminator: Br(
                        34,
                    ),
                    predecessors: [
                        35,
                        39,
                    ],
                    successors: [
                        34,
                    ],
                },
                LirBasicBlock {
                    id: 39,
                    label: Some(
                        "bb39",
                    ),
                    instructions: [],
                    terminator: Br(
                        38,
                    ),
                    predecessors: [
                        36,
                    ],
                    successors: [
                        38,
                    ],
                },
                LirBasicBlock {
                    id: 40,
                    label: Some(
                        "bb40",
                    ),
                    instructions: [],
                    terminator: Br(
                        33,
                    ),
                    predecessors: [],
                    successors: [
                        33,
                    ],
                },
                LirBasicBlock {
                    id: 41,
                    label: Some(
                        "bb41",
                    ),
                    instructions: [
                        LirInstruction {
                            id: 17,
                            kind: Call {
                                function: Global(
                                    "std::io::println",
                                    Ty {
                                        kind: Tuple(
                                            [],
                                        ),
                                        flags: TypeFlags(
                                            0x0,
                                        ),
                                    },
                                ),
                                args: [
                                    Constant(
                                        String(
                                            "\nControl flow demo completed!",
                                        ),
                                    ),
                                ],
                                calling_convention: C,
                                tail_call: false,
                            },
                            type_hint: None,
                            debug_info: None,
                        },
                    ],
                    terminator: Br(
                        42,
                    ),
                    predecessors: [],
                    successors: [
                        42,
                    ],
                },
                LirBasicBlock {
                    id: 42,
                    label: Some(
                        "bb42",
                    ),
                    instructions: [],
                    terminator: Return(
                        None,
                    ),
                    predecessors: [
                        41,
                    ],
                    successors: [],
                },
            ],
            locals: [
                LirLocal {
                    id: 0,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 1,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 2,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 3,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 4,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 5,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 6,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 7,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 8,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 9,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 10,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 11,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 12,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 13,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 14,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 15,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 16,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 17,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 18,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 19,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 20,
                    ty: I64,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 21,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 22,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 23,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 24,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 25,
                    ty: I1,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 26,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 27,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 28,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 29,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 30,
                    ty: I64,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 31,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 32,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 33,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 34,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 35,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 36,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 37,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 38,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 39,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 40,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 41,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 42,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 43,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 44,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 45,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 46,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 47,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 48,
                    ty: I1,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 49,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 50,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 51,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 52,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 53,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 54,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 55,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 56,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 57,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 58,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 59,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 60,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 61,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 62,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 63,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 64,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 65,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 66,
                    ty: I32,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 67,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 68,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 69,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 70,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 71,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 72,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 73,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 74,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 75,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 76,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 77,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
                LirLocal {
                    id: 78,
                    ty: Void,
                    name: None,
                    is_argument: false,
                },
            ],
            stack_slots: [],
            calling_convention: C,
            linkage: Internal,
        },
    ],
    globals: [],
    type_definitions: [],
}