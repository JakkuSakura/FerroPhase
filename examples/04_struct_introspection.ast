ast::File {
  items:
    priv fn main() -> () : fn() -> ()
      block (34 stmts)
        priv struct Point {
          x: f64
          y: f64
        }
        priv struct Color {
          r: u8
          g: u8
          b: u8
        }
        priv const POINT_SIZE: u64
          intrinsic size_of
            args:
              locator Point
        priv const COLOR_SIZE: u64
          intrinsic size_of
            args:
              locator Color
        priv const POINT_FIELDS: u64
          intrinsic field_count
            args:
              locator Point
        priv const COLOR_FIELDS: u64
          intrinsic field_count
            args:
              locator Color
        priv const POINT_HAS_X: bool
          intrinsic has_field
            args:
              locator Point
              value "x"
        priv const POINT_HAS_Z: bool
          intrinsic has_field
            args:
              locator Point
              value "z"
        priv const POINT_METHODS: u64
          intrinsic method_count
            args:
              locator Point
        priv const COLOR_METHODS: u64
          intrinsic method_count
            args:
              locator Color
        expr_stmt ;
          intrinsic println
            template: "=== Struct Introspection ==="
        expr_stmt ;
          intrinsic println
            template: "Point size: {} bytes" <expr>
        expr_stmt ;
          intrinsic println
            template: "Color size: {} bytes" <expr>
        expr_stmt ;
          intrinsic println
            template: "Point fields: {}" <expr>
        expr_stmt ;
          intrinsic println
            template: "Color fields: {}" <expr>
        expr_stmt ;
          intrinsic println
            template: "Point has x: {}" <expr>
        expr_stmt ;
          intrinsic println
            template: "Point has z: {}" <expr>
        expr_stmt ;
          intrinsic println
            template: "Point methods: {}" <expr>
        expr_stmt ;
          intrinsic println
            template: "Color methods: {}" <expr>
        expr_stmt ;
          intrinsic println
            template: "
✓ Introspection completed!"
        expr_stmt ;
          intrinsic println
            template: "
=== Transpilation Demo ==="
        priv const POINT_SIZE_CONST: u64
          intrinsic size_of
            args:
              locator Point
        priv const COLOR_SIZE_CONST: u64
          intrinsic size_of
            args:
              locator Color
        priv const TOTAL_SIZE: u64
          binop +
            lhs:
              locator POINT_SIZE_CONST
            rhs:
              locator COLOR_SIZE_CONST
        let origin : unknown
          init:
            struct Point
              x:
                value 0
              y:
                value 0
        let red : unknown
          init:
            struct Color
              r:
                value 255
              g:
                value 0
              b:
                value 0
        expr_stmt ;
          intrinsic println
            template: "Transpilation target sizes:"
        expr_stmt ;
          intrinsic println
            template: "  Point: {} bytes (const)" POINT_SIZE_CONST
        expr_stmt ;
          intrinsic println
            template: "  Color: {} bytes (const)" COLOR_SIZE_CONST
        expr_stmt ;
          intrinsic println
            template: "  Combined: {} bytes" TOTAL_SIZE
        expr_stmt ;
          intrinsic println
            template: "Runtime instances:"
        expr_stmt ;
          intrinsic println
            template: "  Origin: ({}, {})" origin.x, origin.y
        expr_stmt ;
          intrinsic println
            template: "  Red: rgb({}, {}, {})" red.r, red.g, red.b
        expr_stmt ;
          intrinsic println
            template: "
✓ Introspection enables external code generation!"
}
