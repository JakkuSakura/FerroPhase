mir::Program {
    items:
        fn main() -> () [body: body0]
    bodies:
        body0 { arg_count: 0, locals: 6 }
            return_local: _0
            locals:
                _0: ()
                _1: (i64, i64)
                _2: (i64, i64)
                _3: i32
                _4: ()
                _5: i32
            blocks:
                bb0:
                    s0: _1 = aggregate(tuple; [const Constant { span: Span { file: 15464124933241149777, lo: 9, hi: 10 }, user_ty: None, literal: Int(100) }, const Constant { span: Span { file: 15464124933241149777, lo: 10, hi: 11 }, user_ty: None, literal: Int(20) }])
                    s1: _2 = aggregate(tuple; [const Constant { span: Span { file: 15464124933241149777, lo: 9, hi: 10 }, user_ty: None, literal: Int(100) }, const Constant { span: Span { file: 15464124933241149777, lo: 10, hi: 11 }, user_ty: None, literal: Int(20) }])
                    terminator: call const Constant { span: Span { file: 15464124933241149777, lo: 12, hi: 13 }, user_ty: None, literal: Global("printf", Ty { kind: FnPtr(PolyFnSig { binder: Binder { value: FnSig { inputs: [], output: Ty { kind: Int(I32) }, c_variadic: false, unsafety: Normal, abi: C { unwind: false } }, bound_vars: [] } }) }) }(const Constant { span: Span { file: 15464124933241149777, lo: 13, hi: 14 }, user_ty: None, literal: Str("x=%d, y=%d\n") }, copy _1[Field(0, Ty { kind: Int(I64) })], copy _2[Field(1, Ty { kind: Int(I64) })]) -> _3 then bb1
                bb1:
                    s0: _4 = const Constant { span: Span { file: 15464124933241149777, lo: 282, hi: 283 }, user_ty: None, literal: Int(256) }
                    terminator: call const Constant { span: Span { file: 15464124933241149777, lo: 280, hi: 281 }, user_ty: None, literal: Global("printf", Ty { kind: FnPtr(PolyFnSig { binder: Binder { value: FnSig { inputs: [], output: Ty { kind: Int(I32) }, c_variadic: false, unsafety: Normal, abi: C { unwind: false } }, bound_vars: [] } }) }) }(const Constant { span: Span { file: 15464124933241149777, lo: 281, hi: 282 }, user_ty: None, literal: Str("array size: %d\n") }, copy _4) -> _5 then bb2
                bb2:
                    terminator: return
}
