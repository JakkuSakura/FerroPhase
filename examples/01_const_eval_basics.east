File(
    File {
        path: "examples/01_const_eval_basics.fp",
        items: [
            DefFunction(
                ItemDefFunction {
                    attrs: [],
                    name: #main,
                    ty: None,
                    sig: FunctionSignature {
                        name: Some(
                            #main,
                        ),
                        receiver: None,
                        params: [],
                        generics_params: [],
                        ret_ty: None,
                    },
                    body: Block(
                        ExprBlock {
                            stmts: [
                                Item(
                                    DefConst(
                                        ItemDefConst {
                                            visibility: Private,
                                            name: #BUFFER_SIZE,
                                            ty: Some(
                                                Expr(
                                                    Locator(
                                                        #usize,
                                                    ),
                                                ),
                                            ),
                                            value: BinOp(
                                                ExprBinOp {
                                                    kind: Mul,
                                                    lhs: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 1024,
                                                            },
                                                        ),
                                                    ),
                                                    rhs: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 4,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ),
                                Item(
                                    DefConst(
                                        ItemDefConst {
                                            visibility: Private,
                                            name: #MAX_CONNECTIONS,
                                            ty: Some(
                                                Primitive(
                                                    Int(
                                                        I32,
                                                    ),
                                                ),
                                            ),
                                            value: BinOp(
                                                ExprBinOp {
                                                    kind: Add,
                                                    lhs: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 100,
                                                            },
                                                        ),
                                                    ),
                                                    rhs: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 50,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ),
                                Item(
                                    DefConst(
                                        ItemDefConst {
                                            visibility: Private,
                                            name: #TIMEOUT_MS,
                                            ty: Some(
                                                Primitive(
                                                    Int(
                                                        U64,
                                                    ),
                                                ),
                                            ),
                                            value: BinOp(
                                                ExprBinOp {
                                                    kind: Mul,
                                                    lhs: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 30,
                                                            },
                                                        ),
                                                    ),
                                                    rhs: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 1000,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ),
                                Item(
                                    DefConst(
                                        ItemDefConst {
                                            visibility: Private,
                                            name: #FACTORIAL_5,
                                            ty: Some(
                                                Primitive(
                                                    Int(
                                                        I64,
                                                    ),
                                                ),
                                            ),
                                            value: BinOp(
                                                ExprBinOp {
                                                    kind: Mul,
                                                    lhs: BinOp(
                                                        ExprBinOp {
                                                            kind: Mul,
                                                            lhs: BinOp(
                                                                ExprBinOp {
                                                                    kind: Mul,
                                                                    lhs: BinOp(
                                                                        ExprBinOp {
                                                                            kind: Mul,
                                                                            lhs: Value(
                                                                                Int(
                                                                                    ValueInt {
                                                                                        value: 5,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                            rhs: Value(
                                                                                Int(
                                                                                    ValueInt {
                                                                                        value: 4,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                    rhs: Value(
                                                                        Int(
                                                                            ValueInt {
                                                                                value: 3,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Value(
                                                                Int(
                                                                    ValueInt {
                                                                        value: 2,
                                                                    },
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 1,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ),
                                Item(
                                    DefConst(
                                        ItemDefConst {
                                            visibility: Private,
                                            name: #IS_POWER_OF_TWO,
                                            ty: Some(
                                                Expr(
                                                    Locator(
                                                        #bool,
                                                    ),
                                                ),
                                            ),
                                            value: BinOp(
                                                ExprBinOp {
                                                    kind: Eq,
                                                    lhs: Paren(
                                                        ExprParen {
                                                            expr: BinOp(
                                                                ExprBinOp {
                                                                    kind: BitAnd,
                                                                    lhs: Locator(
                                                                        #BUFFER_SIZE,
                                                                    ),
                                                                    rhs: Paren(
                                                                        ExprParen {
                                                                            expr: BinOp(
                                                                                ExprBinOp {
                                                                                    kind: Sub,
                                                                                    lhs: Locator(
                                                                                        #BUFFER_SIZE,
                                                                                    ),
                                                                                    rhs: Value(
                                                                                        Int(
                                                                                            ValueInt {
                                                                                                value: 1,
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 0,
                                                            },
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ),
                                Item(
                                    DefConst(
                                        ItemDefConst {
                                            visibility: Private,
                                            name: #DEBUG_LEVEL,
                                            ty: Some(
                                                Primitive(
                                                    Int(
                                                        I32,
                                                    ),
                                                ),
                                            ),
                                            value: If(
                                                ExprIf {
                                                    cond: Any(
                                                        RawExprMacro { raw: ExprMacro { attrs: [], mac: Macro { path: Path { leading_colon: None, segments: [PathSegment { ident: Ident { sym: cfg, span: bytes(478..481) }, arguments: PathArguments::None }] }, bang_token: Not, delimiter: MacroDelimiter::Paren(Paren), tokens: TokenStream [Ident { sym: debug_assertions, span: bytes(483..499) }] } } },
                                                    ),
                                                    then: Value(
                                                        Int(
                                                            ValueInt {
                                                                value: 2,
                                                            },
                                                        ),
                                                    ),
                                                    elze: Some(
                                                        Value(
                                                            Int(
                                                                ValueInt {
                                                                    value: 0,
                                                                },
                                                            ),
                                                        ),
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                ),
                                Item(
                                    DefStruct(
                                        ItemDefStruct {
                                            visibility: Private,
                                            name: #Config,
                                            value: TypeStruct {
                                                name: #Config,
                                                fields: [
                                                    StructuralField {
                                                        name: #buffer_size,
                                                        value: Expr(
                                                            Locator(
                                                                #usize,
                                                            ),
                                                        ),
                                                    },
                                                    StructuralField {
                                                        name: #max_connections,
                                                        value: Primitive(
                                                            Int(
                                                                I32,
                                                            ),
                                                        ),
                                                    },
                                                    StructuralField {
                                                        name: #timeout_ms,
                                                        value: Primitive(
                                                            Int(
                                                                U64,
                                                            ),
                                                        ),
                                                    },
                                                    StructuralField {
                                                        name: #debug_level,
                                                        value: Primitive(
                                                            Int(
                                                                I32,
                                                            ),
                                                        ),
                                                    },
                                                ],
                                            },
                                        },
                                    ),
                                ),
                                Item(
                                    DefConst(
                                        ItemDefConst {
                                            visibility: Private,
                                            name: #DEFAULT_CONFIG,
                                            ty: Some(
                                                Expr(
                                                    Locator(
                                                        #Config,
                                                    ),
                                                ),
                                            ),
                                            value: Struct(
                                                ExprStruct {
                                                    name: Locator(
                                                        #Config,
                                                    ),
                                                    fields: [
                                                        ExprField {
                                                            name: #buffer_size,
                                                            value: Some(
                                                                Locator(
                                                                    #BUFFER_SIZE,
                                                                ),
                                                            ),
                                                        },
                                                        ExprField {
                                                            name: #max_connections,
                                                            value: Some(
                                                                Locator(
                                                                    #MAX_CONNECTIONS,
                                                                ),
                                                            ),
                                                        },
                                                        ExprField {
                                                            name: #timeout_ms,
                                                            value: Some(
                                                                Locator(
                                                                    #TIMEOUT_MS,
                                                                ),
                                                            ),
                                                        },
                                                        ExprField {
                                                            name: #debug_level,
                                                            value: Some(
                                                                Locator(
                                                                    #DEBUG_LEVEL,
                                                                ),
                                                            ),
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                ),
                                Expr(
                                    BlockStmtExpr {
                                        expr: StdIoPrintln(
                                            ExprStdIoPrintln {
                                                format: ExprFormatString {
                                                    parts: [
                                                        Literal(
                                                            "Config: buffer=4KB, connections=150, timeout=30000ms, debug=0",
                                                        ),
                                                    ],
                                                    args: [],
                                                    kwargs: [],
                                                },
                                                newline: true,
                                            },
                                        ),
                                        semicolon: Some(
                                            true,
                                        ),
                                    },
                                ),
                                Expr(
                                    BlockStmtExpr {
                                        expr: StdIoPrintln(
                                            ExprStdIoPrintln {
                                                format: ExprFormatString {
                                                    parts: [
                                                        Literal(
                                                            "Computed: factorial=120, is_pow2=true",
                                                        ),
                                                    ],
                                                    args: [],
                                                    kwargs: [],
                                                },
                                                newline: true,
                                            },
                                        ),
                                        semicolon: Some(
                                            true,
                                        ),
                                    },
                                ),
                            ],
                        },
                    ),
                    visibility: Private,
                },
            ),
        ],
    },
)