lir::Program {
    functions:
        fn main() -> void [cc: c, linkage: internal] {
            locals:
                %0: void
                %1: i32
                %2: i32
                %3: i32
                %4: i32
                %5: i32
                %6: i32
                %7: i32
                %8: i32
                %9: i32
                %10: i32
                %11: i32
                %12: { f64, f64 }
                %13: { i8, i8, i8 }
                %14: i32
                %15: i64
                %16: i32
                %17: i64
                %18: i32
                %19: i64
                %20: i32
                %21: i32
                %22: i32
                %23: i32
                %24: i32
            bb0 // label: bb0 // succs: [bb1]:
                i0: %r0 = call c @printf(c"=== Struct Introspection ===
") : i32
                terminator: br bb1
            bb1 // label: bb1 // preds: [bb0] // succs: [bb2]:
                i1: %r1 = call c @printf(c"Point size: %d bytes
", i64 16) : i32
                terminator: br bb2
            bb2 // label: bb2 // preds: [bb1] // succs: [bb3]:
                i2: %r2 = call c @printf(c"Color size: %d bytes
", i64 24) : i32
                terminator: br bb3
            bb3 // label: bb3 // preds: [bb2] // succs: [bb4]:
                i3: %r3 = call c @printf(c"Point fields: %d
", i64 2) : i32
                terminator: br bb4
            bb4 // label: bb4 // preds: [bb3] // succs: [bb5]:
                i4: %r4 = call c @printf(c"Color fields: %d
", i64 3) : i32
                terminator: br bb5
            bb5 // label: bb5 // preds: [bb4] // succs: [bb6]:
                i5: %r5 = zext bool true to i32 : i32
                i6: %r6 = call c @printf(c"Point has x: %d
", %r5) : i32
                terminator: br bb6
            bb6 // label: bb6 // preds: [bb5] // succs: [bb7]:
                i7: %r7 = zext bool false to i32 : i32
                i8: %r8 = call c @printf(c"Point has z: %d
", %r7) : i32
                terminator: br bb7
            bb7 // label: bb7 // preds: [bb6] // succs: [bb8]:
                i9: %r9 = call c @printf(c"Point methods: %d
", i64 0) : i32
                terminator: br bb8
            bb8 // label: bb8 // preds: [bb7] // succs: [bb9]:
                i10: %r10 = call c @printf(c"Color methods: %d
", i64 0) : i32
                terminator: br bb9
            bb9 // label: bb9 // preds: [bb8] // succs: [bb10]:
                i11: %r11 = call c @printf(c"
✓ Introspection completed!
") : i32
                terminator: br bb10
            bb10 // label: bb10 // preds: [bb9] // succs: [bb11]:
                i12: %r12 = call c @printf(c"
=== Transpilation Demo ===
") : i32
                terminator: br bb11
            bb11 // label: bb11 // preds: [bb10] // succs: [bb12]:
                i13: %r13 = alloca i32 1 align 8 : ptr { f64, f64 }
                i14: store struct { f64, f64 } { f64 0, f64 0 }, %r13 align 8
                i15: %r15 = alloca i32 1 align 1 : ptr { i8, i8, i8 }
                i16: store struct { i8, i8, i8 } { i8 255, i8 0, i8 0 }, %r15 align 1
                i17: %r17 = call c @printf(c"Transpilation target sizes:
") : i32
                terminator: br bb12
            bb12 // label: bb12 // preds: [bb11] // succs: [bb13]:
                i18: %r18 = alloca i32 1 align 8 : ptr i64
                i19: store i64 16, %r18 align 8
                i20: %r20 = load %r18 align 8 : i64
                i21: %r21 = call c @printf(c"  Point: %d bytes (const)
", %r20) : i32
                terminator: br bb13
            bb13 // label: bb13 // preds: [bb12] // succs: [bb14]:
                i22: %r22 = alloca i32 1 align 8 : ptr i64
                i23: store i64 24, %r22 align 8
                i24: %r24 = load %r22 align 8 : i64
                i25: %r25 = call c @printf(c"  Color: %d bytes (const)
", %r24) : i32
                terminator: br bb14
            bb14 // label: bb14 // preds: [bb13] // succs: [bb15]:
                i26: %r26 = alloca i32 1 align 8 : ptr i64
                i27: store i64 40, %r26 align 8
                i28: %r28 = load %r26 align 8 : i64
                i29: %r29 = call c @printf(c"  Combined: %d bytes
", %r28) : i32
                terminator: br bb15
            bb15 // label: bb15 // preds: [bb14] // succs: [bb16]:
                i30: %r30 = call c @printf(c"Runtime instances:
") : i32
                terminator: br bb16
            bb16 // label: bb16 // preds: [bb15] // succs: [bb17]:
                i31: %r31 = bitcast %r13 to ptr f64 : ptr f64
                i32: %r32 = load %r31 align 8 : f64
                i33: %r33 = bitcast %r13 to ptr i8 : ptr i8
                i34: %r34 = gep inbounds %r33 [i64 8] : ptr i8
                i35: %r35 = bitcast %r34 to ptr f64 : ptr f64
                i36: %r36 = load %r35 align 8 : f64
                i37: %r37 = call c @printf(c"  Origin: (%f, %f)
", %r32, %r36) : i32
                terminator: br bb17
            bb17 // label: bb17 // preds: [bb16] // succs: [bb18]:
                i38: %r38 = bitcast %r15 to ptr i8 : ptr i8
                i39: %r39 = load %r38 align 1 : i8
                i40: %r40 = zext %r39 to i32 : i32
                i41: %r41 = bitcast %r15 to ptr i8 : ptr i8
                i42: %r42 = gep inbounds %r41 [i64 1] : ptr i8
                i43: %r43 = bitcast %r42 to ptr i8 : ptr i8
                i44: %r44 = load %r43 align 1 : i8
                i45: %r45 = zext %r44 to i32 : i32
                i46: %r46 = bitcast %r15 to ptr i8 : ptr i8
                i47: %r47 = gep inbounds %r46 [i64 2] : ptr i8
                i48: %r48 = bitcast %r47 to ptr i8 : ptr i8
                i49: %r49 = load %r48 align 1 : i8
                i50: %r50 = zext %r49 to i32 : i32
                i51: %r51 = call c @printf(c"  Red: rgb(%d, %d, %d)
", %r40, %r45, %r50) : i32
                terminator: br bb18
            bb18 // label: bb18 // preds: [bb17] // succs: [bb19]:
                i52: %r52 = call c @printf(c"
✓ Introspection enables external code generation!
") : i32
                terminator: br bb19
            bb19 // label: bb19 // preds: [bb18]:
                terminator: ret void
        }
}
