ast::File {
  items:
    priv fn main() -> () : fn() -> () : fn() -> ()
      block (13 stmts) : ()
        priv struct Data : Data{a: i64, b: i64, c: [u8; 16]} {
          a: i64
          b: i64
          c: [u8; 16]
        }
        priv const SIZE: u64 : u64
          value 24 : u64
        priv const FIELDS: u64 : u64
          value 3 : u64
        priv const HAS_A: bool : bool
          value true : Expr(bool)
        priv const HAS_X: bool : bool
          value false : Expr(bool)
        expr_stmt ;
          intrinsic println : ()
            template: "sizeof={}, fields={}" SIZE, FIELDS
        expr_stmt ;
          intrinsic println : ()
            template: "has_a={}, has_x={}" HAS_A, HAS_X
        priv const MAX_SIZE: u64 : u64
          value 64 : u64
        priv const SIZE_OK: bool : bool
          value true : Expr(bool)
        priv const IS_ALIGNED: bool : bool
          value true : Expr(bool)
        expr_stmt ;
          intrinsic println : ()
            template: "size_ok={}, aligned={}" SIZE_OK, IS_ALIGNED
        priv const MODE: &string : &string
          value "optimized" : &Expr(str)
        expr_stmt ;
          intrinsic println : ()
            template: "mode: {}" MODE
}
