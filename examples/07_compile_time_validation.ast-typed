ast::File {
  items:
    priv fn main() -> () : fn() -> () : fn() -> ()
      block (13 stmts) : ()
        priv struct Data : Data{a: i64, b: i64, c: [u8; 16]} {
          a: i64
          b: i64
          c: [u8; 16]
        }
        priv const SIZE: u64 : u64
          intrinsic size_of : u64
            args:
              locator Data : Data{a: i64, b: i64, c: [u8; 16]}
        priv const FIELDS: u64 : u64
          intrinsic field_count : u64
            args:
              locator Data : Data{a: i64, b: i64, c: [u8; 16]}
        priv const HAS_A: bool : bool
          intrinsic has_field : bool
            args:
              locator Data : Data{a: i64, b: i64, c: [u8; 16]}
              value "a" : &string
        priv const HAS_X: bool : bool
          intrinsic has_field : bool
            args:
              locator Data : Data{a: i64, b: i64, c: [u8; 16]}
              value "x" : &string
        expr_stmt ;
          intrinsic println : ()
            template: "sizeof={}, fields={}" SIZE, FIELDS
        expr_stmt ;
          intrinsic println : ()
            template: "has_a={}, has_x={}" HAS_A, HAS_X
        priv const MAX_SIZE: u64 : u64
          value 64 : i64
        priv const SIZE_OK: bool : bool
          binop <= : bool
            lhs:
              locator SIZE : u64
            rhs:
              locator MAX_SIZE : u64
        priv const IS_ALIGNED: bool : bool
          binop == : bool
            lhs:
              binop % : u64
                lhs:
                  locator SIZE : u64
                rhs:
                  value 8 : i64
            rhs:
              value 0 : i64
        expr_stmt ;
          intrinsic println : ()
            template: "size_ok={}, aligned={}" SIZE_OK, IS_ALIGNED
        priv const MODE: &string : &string
          if : &string
            cond:
              binop && : bool
                lhs:
                  locator SIZE_OK : bool
                rhs:
                  locator IS_ALIGNED : bool
            then:
              value "optimized" : &string
            else:
              value "default" : &string
        expr_stmt ;
          intrinsic println : ()
            template: "mode: {}" MODE
}
