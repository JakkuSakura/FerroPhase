hir::Program {
    fn main() -> () {
        {
            const BUFFER_SIZE: i64 =
                4096;
            const MAX_CONNECTIONS: i64 =
                150;
            const FACTORIAL_5: i64 =
                120;
            const IS_LARGE: bool =
                true;
            printf("Buffer: %dKB, factorial(5)=%d, large=%d
", (BUFFER_SIZE / 1024), FACTORIAL_5, IS_LARGE);
            struct Config {
                pub buffer_size: i64,
                pub max_connections: i64,
            }
            const DEFAULT_CONFIG: Config =
                Config { buffer_size: 4096, max_connections: 150 };
            printf("Config: %dKB buffer, %d connections
", (DEFAULT_CONFIG.buffer_size / 1024), DEFAULT_CONFIG.max_connections);
            let runtime_multiplier = 3;
            let optimized_size = std::ConstBlock(1 args);
            let cache_strategy = std::ConstBlock(1 args);
            let total_memory = (runtime_multiplier * std::ConstBlock(1 args));
            printf("Const blocks: size=%d, strategy=%s, memory=%d
", optimized_size, cache_strategy, total_memory);
        }
    }
}
