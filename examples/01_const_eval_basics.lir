lir::Program {
    functions:
        fn main() -> i32 [cc: c, linkage: internal] {
            locals:
                %0: i32
                %1: i64
                %2: i64
                %3: i64
                %4: i1
                %5: i64
                %6: i64
                %7: i64
                %8: ptr i8
                %9: i64
                %10: i64
                %11: i64
                %12: i64
                %13: i64
                %14: i1
                %15: void
                %16: i64
                %17: i64
                %18: void
                %19: void
                %20: i64
                %21: void
                %22: i64
                %23: i64
                %24: void
                %25: i64
                %26: i64
                %27: i64
                %28: i64
                %29: i1
                %30: ptr i8
                %31: ptr i8
                %32: ptr i8
                %33: i64
                %34: i64
                %35: void
                %36: void
                %37: void
            bb0 // label: bb0 // succs: [bb1]:
                i0: %r0 = alloca i32 1 align 4 : ptr i32
                i1: %r1 = alloca i32 1 align 8 : ptr ptr i8
                i2: %r2 = alloca i32 1 align 8 : ptr i64
                i3: store i64 4096, %r2 align 8
                i4: %r4 = alloca i32 1 align 8 : ptr i64
                i5: %r5 = load %r2 align 8 : i64
                i6: store %r5, %r4 align 8
                i7: %r7 = alloca i32 1 align 8 : ptr i64
                i8: store i64 150, %r7 align 8
                i9: %r9 = alloca i32 1 align 8 : ptr i64
                i10: %r10 = load %r7 align 8 : i64
                i11: store %r10, %r9 align 8
                i12: %r12 = alloca i32 1 align 8 : ptr i64
                i13: store i64 120, %r12 align 8
                i14: %r14 = alloca i32 1 align 8 : ptr i64
                i15: %r15 = load %r12 align 8 : i64
                i16: store %r15, %r14 align 8
                i17: %r17 = alloca i32 1 align 8 : ptr i64
                i18: store i64 2048, %r17 align 8
                i19: %r19 = alloca i32 1 align 1 : ptr i1
                i20: %r20 = load %r4 align 8 : i64
                i21: %r21 = load %r17 align 8 : i64
                i22: %r22 = gt %r20, %r21 : i1
                i23: store %r22, %r19 align 1
                i24: %r24 = alloca i32 1 align 1 : ptr i1
                i25: %r25 = load %r19 align 1 : i1
                i26: store %r25, %r24 align 1
                i27: %r27 = alloca i32 1 align 8 : ptr i64
                i28: store i64 1024, %r27 align 8
                i29: %r29 = alloca i32 1 align 8 : ptr i64
                i30: %r30 = load %r4 align 8 : i64
                i31: %r31 = load %r27 align 8 : i64
                i32: %r32 = div %r30, %r31 : i64
                i33: store %r32, %r29 align 8
                i34: %r34 = load %r29 align 8 : i64
                i35: %r35 = load %r14 align 8 : i64
                i36: %r36 = load %r24 align 1 : i1
                i37: %r37 = call c @printf(c"Buffer: %lldKB, factorial(5)=%lld, large=%d
", %r34, %r35, %r36)
                terminator: br bb1
            bb1 // label: bb1 // preds: [bb0] // succs: [bb2]:
                i38: %r38 = alloca i32 1 align 8 : ptr i64
                i39: store i64 0, %r38 align 8
                i40: %r40 = alloca i32 1 align 8 : ptr i64
                i41: %r41 = load %r38 align 8 : i64
                i42: store %r41, %r40 align 8
                i43: %r43 = alloca i32 1 align 8 : ptr i64
                i44: store i64 1024, %r43 align 8
                i45: %r45 = alloca i32 1 align 8 : ptr i64
                i46: %r46 = load %r4 align 8 : i64
                i47: %r47 = load %r43 align 8 : i64
                i48: %r48 = div %r46, %r47 : i64
                i49: store %r48, %r45 align 8
                i50: %r50 = load %r45 align 8 : i64
                i51: %r51 = load %r9 align 8 : i64
                i52: %r52 = call c @printf(c"Config: %lldKB buffer, %lld connections
", %r50, %r51)
                terminator: br bb2
            bb2 // label: bb2 // preds: [bb1] // succs: [bb3, bb4]:
                i53: %r53 = alloca i32 1 align 8 : ptr i64
                i54: store i64 3, %r53 align 8
                i55: %r55 = alloca i32 1 align 8 : ptr i64
                i56: %r56 = load %r53 align 8 : i64
                i57: store %r56, %r55 align 8
                i58: %r58 = alloca i32 1 align 8 : ptr i64
                i59: store i64 2, %r58 align 8
                i60: %r60 = alloca i32 1 align 8 : ptr i64
                i61: %r61 = load %r4 align 8 : i64
                i62: %r62 = load %r58 align 8 : i64
                i63: %r63 = mul %r61, %r62 : i64
                i64: store %r63, %r60 align 8
                i65: %r65 = alloca i32 1 align 8 : ptr i64
                i66: %r66 = load %r60 align 8 : i64
                i67: store %r66, %r65 align 8
                i68: %r68 = alloca i32 1 align 8 : ptr i64
                i69: store i64 2048, %r68 align 8
                i70: %r70 = alloca i32 1 align 1 : ptr i1
                i71: %r71 = load %r4 align 8 : i64
                i72: %r72 = load %r68 align 8 : i64
                i73: %r73 = gt %r71, %r72 : i1
                i74: store %r73, %r70 align 1
                i75: %r75 = load %r70 align 1 : i1
                terminator: cond_br %r75, bb3, bb4
            bb3 // label: bb3 // preds: [bb2] // succs: [bb5]:
                i76: %r76 = alloca i32 1 align 8 : ptr ptr i8
                i77: store c"large", %r76 align 8
                i78: %r78 = load %r76 align 8 : ptr i8
                i79: store %r78, %r1 align 8
                terminator: br bb5
            bb4 // label: bb4 // preds: [bb2] // succs: [bb5]:
                i80: %r80 = alloca i32 1 align 8 : ptr ptr i8
                i81: store c"small", %r80 align 8
                i82: %r82 = load %r80 align 8 : ptr i8
                i83: store %r82, %r1 align 8
                terminator: br bb5
            bb5 // label: bb5 // preds: [bb3, bb4] // succs: [bb6]:
                i84: %r84 = alloca i32 1 align 8 : ptr ptr i8
                i85: %r85 = load %r1 align 8 : ptr i8
                i86: store %r85, %r84 align 8
                i87: %r87 = alloca i32 1 align 8 : ptr i64
                i88: %r88 = load %r4 align 8 : i64
                i89: %r89 = load %r9 align 8 : i64
                i90: %r90 = mul %r88, %r89 : i64
                i91: store %r90, %r87 align 8
                i92: %r92 = alloca i32 1 align 8 : ptr i64
                i93: %r93 = load %r55 align 8 : i64
                i94: %r94 = load %r87 align 8 : i64
                i95: %r95 = mul %r93, %r94 : i64
                i96: store %r95, %r92 align 8
                i97: %r97 = alloca i32 1 align 8 : ptr i64
                i98: %r98 = load %r92 align 8 : i64
                i99: store %r98, %r97 align 8
                i100: %r100 = load %r65 align 8 : i64
                i101: %r101 = load %r84 align 8 : ptr i8
                i102: %r102 = load %r97 align 8 : i64
                i103: %r103 = call c @printf(c"Const blocks: size=%lld, strategy=%p, memory=%lld
", %r100, %r101, %r102)
                terminator: br bb6
            bb6 // label: bb6 // preds: [bb5]:
                i104: store i32 0, %r0 align 4
                terminator: ret i32 0
        }
}
