lir::Program {
    functions:
        fn main() -> i32 [cc: c, linkage: internal] {
            locals:
                %0: i32
                %1: i64
                %2: i32
                %3: i64
                %4: i64
                %5: i1
                %6: i32
                %7: i64
                %8: i64
                %9: void
                %10: void
                %11: i32
                %12: i64
                %13: i64
                %14: i64
                %15: i64
                %16: i64
                %17: i64
                %18: i1
                %19: i1
                %20: i32
                %21: i64
                %22: i64
                %23: void
                %24: i64
                %25: void
                %26: i64
                %27: i64
                %28: void
                %29: void
                %30: void
                %31: void
            bb0 // label: bb0 // succs: [bb1]:
                i0: %r0 = alloca i32 1 align 4 : ptr i32
                i1: %r1 = alloca i32 1 align 4 : ptr i32
                i2: %r2 = alloca i32 1 align 8 : ptr i64
                i3: store i64 4096, %r2 align 8
                i4: %r4 = alloca i32 1 align 8 : ptr i64
                i5: %r5 = load %r2 align 8 : i64
                i6: store %r5, %r4 align 8
                i7: %r7 = load %r4 align 8 : i64
                i8: %r8 = call c @printf(c"Buffer size: %llu Bytes
", %r7)
                terminator: br bb1
            bb1 // label: bb1 // preds: [bb0] // succs: [bb2, bb3]:
                i9: %r9 = alloca i32 1 align 4 : ptr i32
                i10: store i64 150, %r9 align 4
                i11: %r11 = alloca i32 1 align 4 : ptr i32
                i12: %r12 = load %r9 align 4 : i32
                i13: store %r12, %r11 align 4
                i14: %r14 = alloca i32 1 align 8 : ptr i64
                i15: store i64 30000, %r14 align 8
                i16: %r16 = alloca i32 1 align 8 : ptr i64
                i17: %r17 = load %r14 align 8 : i64
                i18: store %r17, %r16 align 8
                i19: %r19 = alloca i32 1 align 8 : ptr i64
                i20: store i64 120, %r19 align 8
                i21: %r21 = alloca i32 1 align 8 : ptr i64
                i22: %r22 = load %r19 align 8 : i64
                i23: store %r22, %r21 align 8
                i24: %r24 = alloca i32 1 align 8 : ptr i64
                i25: store i64 1, %r24 align 8
                i26: %r26 = alloca i32 1 align 8 : ptr i64
                i27: %r27 = load %r4 align 8 : i64
                i28: %r28 = load %r24 align 8 : i64
                i29: %r29 = sub %r27, %r28 : i64
                i30: store %r29, %r26 align 8
                i31: %r31 = alloca i32 1 align 8 : ptr i64
                i32: %r32 = load %r4 align 8 : i64
                i33: %r33 = load %r26 align 8 : i64
                i34: %r34 = and %r32, %r33 : i64
                i35: store %r34, %r31 align 8
                i36: %r36 = alloca i32 1 align 8 : ptr i64
                i37: store i64 0, %r36 align 8
                i38: %r38 = alloca i32 1 align 1 : ptr i1
                i39: %r39 = load %r31 align 8 : i64
                i40: %r40 = load %r36 align 8 : i64
                i41: %r41 = eq %r39, %r40 : i1
                i42: store %r41, %r38 align 1
                i43: %r43 = alloca i32 1 align 1 : ptr i1
                i44: %r44 = load %r38 align 1 : i1
                i45: store %r44, %r43 align 1
                i46: %r46 = alloca i32 1 align 1 : ptr i1
                i47: store bool true, %r46 align 1
                i48: %r48 = load %r46 align 1 : i1
                terminator: cond_br %r48, bb2, bb3
            bb2 // label: bb2 // preds: [bb1] // succs: [bb4]:
                i49: %r49 = alloca i32 1 align 8 : ptr i64
                i50: store i64 2, %r49 align 8
                i51: %r51 = load %r49 align 8 : i64
                i52: store %r51, %r1 align 4
                terminator: br bb4
            bb3 // label: bb3 // preds: [bb1] // succs: [bb4]:
                i53: %r53 = alloca i32 1 align 8 : ptr i64
                i54: store i64 0, %r53 align 8
                i55: %r55 = load %r53 align 8 : i64
                i56: store %r55, %r1 align 4
                terminator: br bb4
            bb4 // label: bb4 // preds: [bb2, bb3] // succs: [bb5]:
                i57: %r57 = alloca i32 1 align 4 : ptr i32
                i58: %r58 = load %r1 align 4 : i32
                i59: store %r58, %r57 align 4
                i60: %r60 = alloca i32 1 align 8 : ptr i64
                i61: store i64 0, %r60 align 8
                i62: %r62 = alloca i32 1 align 8 : ptr i64
                i63: %r63 = load %r60 align 8 : i64
                i64: store %r63, %r62 align 8
                i65: %r65 = alloca i32 1 align 8 : ptr i64
                i66: store i64 1024, %r65 align 8
                i67: %r67 = alloca i32 1 align 8 : ptr i64
                i68: %r68 = load %r4 align 8 : i64
                i69: %r69 = load %r65 align 8 : i64
                i70: %r70 = div %r68, %r69 : i64
                i71: store %r70, %r67 align 8
                i72: %r72 = load %r67 align 8 : i64
                i73: %r73 = load %r11 align 4 : i32
                i74: %r74 = load %r16 align 8 : i64
                i75: %r75 = load %r57 align 4 : i32
                i76: %r76 = call c @printf(c"Config: buffer=%lluKB, connections=%d, timeout=%llums, debug=%d
", %r72, %r73, %r74, %r75)
                terminator: br bb5
            bb5 // label: bb5 // preds: [bb4] // succs: [bb6]:
                i77: %r77 = load %r21 align 8 : i64
                i78: %r78 = load %r43 align 1 : i1
                i79: %r79 = call c @printf(c"Computed: factorial=%lld, is_pow2=%d
", %r77, %r78)
                terminator: br bb6
            bb6 // label: bb6 // preds: [bb5]:
                i80: store i32 0, %r0 align 4
                terminator: ret i32 0
        }
}
