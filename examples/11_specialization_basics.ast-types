fn add -> Some(Primitive(Int(I64)))
  Parameters:
    a: i64

    b: i64

  Body:
    BinOp(ExprBinOp { kind: Add, lhs: Expr { ty: Some(Primitive(Int(I64))), kind: Locator(Ident(Ident { name: "a" })) }, rhs: Expr { ty: Some(Primitive(Int(I64))), kind: Locator(Ident(Ident { name: "b" })) } }) : i64

fn double -> Some(Primitive(Int(I64)))
  Parameters:
    x: i64

  Body:
    BinOp(ExprBinOp { kind: Mul, lhs: Expr { ty: Some(Primitive(Int(I64))), kind: Locator(Ident(Ident { name: "x" })) }, rhs: Expr { ty: Some(Primitive(Int(I64))), kind: Value(Int(ValueInt { value: 2 })) } }) : i64

fn compose -> Some(Primitive(Int(I64)))
  Parameters:
    x: i64

  Body:
    Invoke : i64

      target:
        Function(double)
      args:
        Invoke : i64

          target:
            Function(add)
          args:
            Locator(x) : i64

            Value(Int(ValueInt { value: 1 })) : i64

fn main -> Some(Unit(TypeUnit))
  Parameters:
  Body:
    Block : ()

      IntrinsicCall(IntrinsicCall { kind: Println, payload: Format { template: ExprFormatString { parts: [Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None })], args: [Expr { ty: Some(Primitive(Int(I64))), kind: Invoke(ExprInvoke { target: Function(Ident(Ident { name: "add" })), args: [Expr { ty: Some(Primitive(Int(I64))), kind: Value(Int(ValueInt { value: 2 })) }, Expr { ty: Some(Primitive(Int(I64))), kind: Value(Int(ValueInt { value: 3 })) }] }) }], kwargs: [] } } }) : ()

      IntrinsicCall(IntrinsicCall { kind: Println, payload: Format { template: ExprFormatString { parts: [Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None })], args: [Expr { ty: Some(Primitive(Int(I64))), kind: Invoke(ExprInvoke { target: Function(Ident(Ident { name: "double" })), args: [Expr { ty: Some(Primitive(Int(I64))), kind: Value(Int(ValueInt { value: 5 })) }] }) }], kwargs: [] } } }) : ()

      IntrinsicCall(IntrinsicCall { kind: Println, payload: Format { template: ExprFormatString { parts: [Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None })], args: [Expr { ty: Some(Primitive(Int(I64))), kind: Invoke(ExprInvoke { target: Function(Ident(Ident { name: "compose" })), args: [Expr { ty: Some(Primitive(Int(I64))), kind: Value(Int(ValueInt { value: 10 })) }] }) }], kwargs: [] } } }) : ()

      IntrinsicCall(IntrinsicCall { kind: Println, payload: Format { template: ExprFormatString { parts: [Literal("const: "), Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None })], args: [Expr { ty: Some(Primitive(Int(I64))), kind: Locator(Ident(Ident { name: "RESULT" })) }], kwargs: [] } } }) : ()

