fn main -> Some(Unit(TypeUnit))
  Parameters:
  Body:
    Block : ()

      IntrinsicCall(IntrinsicCall { kind: Println, payload: Format { template: ExprFormatString { parts: [Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None }), Literal("Â°C is "), Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None })], args: [Expr { ty: Some(Primitive(Int(I64))), kind: Locator(#TEMP) }, Expr { ty: Some(Reference(TypeReference { ty: Primitive(String), mutability: None, lifetime: None })), kind: Locator(#WEATHER) }], kwargs: [] } } }) : ()

      IntrinsicCall(IntrinsicCall { kind: Println, payload: Format { template: ExprFormatString { parts: [Literal("Suggested: "), Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None })], args: [Expr { ty: Some(Reference(TypeReference { ty: Primitive(String), mutability: None, lifetime: None })), kind: Locator(#ACTIVITY) }], kwargs: [] } } }) : ()

      IntrinsicCall(IntrinsicCall { kind: Println, payload: Format { template: ExprFormatString { parts: [Literal("Score "), Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None }), Literal(" = grade "), Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None })], args: [Expr { ty: Some(Primitive(Int(I64))), kind: Locator(#SCORE) }, Expr { ty: Some(Reference(TypeReference { ty: Primitive(String), mutability: None, lifetime: None })), kind: Locator(#GRADE) }], kwargs: [] } } }) : ()

      IntrinsicCall(IntrinsicCall { kind: Println, payload: Format { template: ExprFormatString { parts: [Literal("Value "), Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None }), Literal(" is "), Placeholder(FormatPlaceholder { arg_ref: Implicit, format_spec: None })], args: [Expr { ty: Some(Primitive(Int(I64))), kind: Locator(#value) }, Expr { ty: Some(Reference(TypeReference { ty: Primitive(String), mutability: None, lifetime: None })), kind: Locator(#category) }], kwargs: [] } } }) : ()

